openapi: 3.0.0
info:
  title: SmartLab API v0.0.1
  version: '1.0'
  description: This is the api endpoint documentation for startLAB project - a inventory management application created specifically for computer labs.
  license:
    name: MIT
  contact:
    name: kdsuneraavinash
    email: kdsuneraavinash@gmail.com
servers:
  - url: 'http://localhost:3000'
paths:
  /api/registrar/token:
    put:
      summary: Manage invite token for an email
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"role" must be a valid GUID'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      operationId: get-api-registrar-token-generate
      description: |-
        Theis sends a request to generate a token for a specified address to create new account on the provided role. If the account is already created or if there is an already pending invite, this will also send an error status.


        > Required Permission Level: REGISTRAR
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requests:
                  $ref: '#/components/schemas/Registration-Role-Assign'
            examples:
              example:
                value:
                  email: user@gmail.com
                  role: 42647147-69d2-4c2b-8c3b-d3cc30dfdd97
        description: ''
      tags:
        - registrar
      security:
        - token: []
    parameters: []
    delete:
      summary: ''
      operationId: delete-api-registrar-token
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: User user@gmail.com is not sent an invitation link or ther user has created a account.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      description: |-
        Theis sends a request to delete a token for a specified address. If the account is already created or if there isn't an already pending invite, this will also send an error status.


        > Required Permission Level: REGISTRAR
      tags:
        - registrar
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
            examples:
              example:
                value:
                  email: gayal@gmail.com
        description: ''
  /api/registrar/roles:
    get:
      summary: List all available roles
      tags:
        - registrar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
              examples:
                example:
                  value:
                    roles:
                      - id: 375840ad-2df8-45c9-aff7-eea54371487c
                        name: REQUESTER
                      - id: 40d1d03b-8305-45c3-ab9c-4d6c56022976
                        name: ADMINISTRATOR
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Insufficient permissions
      operationId: get-api-list-roles
      description: |-
        List all the roles

        > Required Permission Level: REGISTRAR
      security:
        - token: []
    parameters: []
  /api/registration/verify:
    get:
      summary: Verify Registration Token
      tags:
        - none
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: Email Address of the token owner
                    format: email
                  roleId:
                    type: string
                    description: Role Id of the token owner
                    format: uuid
                  Role:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Role name of the given token
                required:
                  - email
                  - roleId
                  - Role
              examples:
                example:
                  value:
                    email: admin@admin.com
                    roleId: beb4667e-20a5-4bc9-b2f5-5c9d1df1be55
                    Role:
                      name: Administrator
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: Invalid token
      operationId: get-api-registration-verify
      description: Verify whether the registration token is valid. If valid returns email and assigned role.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Registration token of the user
              required:
                - token
            examples: {}
  /api/registration/register:
    post:
      summary: Register an account
      operationId: post-api-registration-register
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: '"firstName" is required'
      description: Registers a user using the given token and details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
              required:
                - token
                - firstName
                - lastName
                - password
            examples:
              example:
                value:
                  token: pS_xf6FnP8T53sdX4Gw-J7s9.QfOlswnII9zfpIZAOqRj5bLXTI~kMsUe6yDH0JDnXzNTIDJJsQFscmAmDrGotie5G3I9Q_X
                  firstName: Demo
                  lastName: User
                  password: password
        description: ''
      tags:
        - none
  /api/login:
    post:
      summary: Login using credentials
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT Token for the user
                required:
                  - token
              examples:
                example:
                  value:
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjBiMzNkN2MxLTdhZWEtNGQxMC1iOTM3LWJiODc5NTgwZTdkMiIsImZpcnN0TmFtZSI6IkRlbW8iLCJsYXN0TmFtZSI6IlVzZXIiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsInBlcm1pc3Npb25zIjpbIkFETUlOSVNUUkFUT1IiXSwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJyb2xlSWQiOiJiZWI0NjY3ZS0yMGE1LTRiYzktYjJmNS01YzlkMWRmMWJlNTUiLCJpYXQiOjE1ODM0NTE5NDd9.tHNhRHUpu9GxKN9jLrV1ZzNaU4kfUnU8fVDOZanqeCI
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example:
                  value:
                    message: "Email isn't registered in the system"
      operationId: get-api-login
      description: Login a user using email and password.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
            examples:
              example:
                value:
                  email: admin@admin.com
                  password: password
        description: ''
components:
  schemas:
    Registration-Role-Assign:
      title: Registration Token Generation Request
      type: object
      x-examples:
        example:
          value:
            email: kdsuneraavinash@gmail.com
            role: 776ef843-eb7f-4702-b572-23ef556b8d37
      description: ''
      properties:
        email:
          type: string
          description: Email address to be sent the registration token
          format: email
        role:
          type: string
          description: Initial role for the account created by email address
          format: uuid
      required:
        - email
        - role
      x-tags:
        - registrar
    Error:
      title: Error
      type: object
      properties:
        message:
          type: string
          description: Error Message
      required:
        - message
      x-examples:
        example:
          value:
            message: Invalid details provided. Verification failed.
      description: ''
      x-tags:
        - error
    Role:
      title: Role
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
  securitySchemes:
    token:
      name: token
      type: apiKey
      in: header
      description: JWT Token for the user
tags:
  - name: registrar
  - name: error
  - name: none
